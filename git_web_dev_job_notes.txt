Section 1:
  Lecture 1 - Course Overview

Section 2:
  Lecture 2 - What is Git?

  Lecture 3 - Intro to Git

  Lecture 4 - Git your hands dirty
    git --version
    git config --global user.name "Eric Chuderewicz"
    git config --global user.email "echuderewicz@gmail.com"
    creating a brand new reposity: git init
    git add <name_of_file>
    git commit -m "my first commit"
    to restore your files if something happens type below:
    git checkout -- .
    to clone from Git repo: navigate to the directory you would like to clone to on your computer:
    git clone https://github.com/LearnWebCode/welcome-to-git.git

  Lecture 5 - Setup your github
    create a new travel-site repo on Github server
    on local machine, clone the starter files:
    git clone https://github.com/LearnWebCode/travel-site-files.github
    rename directory to "travel-site"
    git remote -v (this tells you what Git thinks is the remote site)
    to change the remote site:
    git remote set-url origin https://github.com/echuderewicz/travel-site.git
    now confirm:
    git remote -v (you have just updated the location of your remote server)

Section 3:
  Lecture 6 - Node.js & NPM
    automation and organization explained

  Lecture 7 - A quick note

  Lecture 8 - Node.js introduction
    3 main parts:
      What is Node.js
      Help install
      Example:
        node experiment: create a file and retrieve an image from the internet

  Lecture 9 - NPM - Node Package Manager
    npm install jquery (we did this first but then deleted it).
    A better way is to create a grocery list:
    npm init (this creates the package.json file)
    npm install jquery --save (this updates the package.json file)
    npm install normalize.css --save
    to regenerate if you deleted jquery and normalize use command below
    npm install
  Lecture 10 - important note about version numbers
    copied over the populated package.json file since many packages of much later versions
    than the udemy video (a good way to avoid the pain of things not working)

Section 4:
  Lecture 11 - gulp
    installing gulp globally
      sudo npm install gulp-cli --global
    adding gulp within project
    npm install gulp --save-dev
    touch gulpfile.js
    need gulp plugins to do anything useful
    npm install gulp-watch --save-dev
    gulp watch (will start up the watch commmand. See gulp file)
    ctrl-c to stop gulp watch

  Lecture 12 - Gulp and PostCss
    what is a css workflow - variables, nesting etc.
    important gulp and node terms
    Autoprefixer
    PostCss = fastest to compile, new kid on the block
    gulp.src, gulp.dest, pipe used in gulpfile.js
    install PostCss:
      npm install gulp-postcss --save-dev
      npm install autoprefixer --save-dev
      npm install postcss-simple-vars --save-dev
      npm install postcss-nested --save-dev
      all the above are then required into the gulpfile.js

Section 5:
  Lecture 13 - CSS File Architecture
    file architecture - organize css code into smaller files
    identify patterns
    rules and guidlines to follow
    npm install postcss-import --save-dev
    started using css imports, created a css modules and base subfolder within the styles folder
    positioned the large hero block vertically and horizontally over the banner image

  Lecture 14 - What is the BEM methodology
    B. - block
    E. - element - belongs to a block
    M. - modifier - a change to the default state of an object

    *CSS selectors should target elements directly with classes, instead of relying on type selectors, descendent selectors, and the cascade.

    *Because we are limiting cascade we are free to move blocks around and reuse them throughout the page. Blocks are independant and self contained.

    *identify patterns, and the create single responsibility blocks

    *makes the relationship between our HTML and CSS Clear

    in the following classname .large-hero__title, the underscore prefix indicates that the following is an SUBELEMENT of the LARGER .large-hero block.

    to create nesting. use the ampersand "&". For instance, right the above as "&__title" while nesting. This will then get transformed by postcss as .large-hero__title.

  Lecture 15 -
    discussion on rem.
    font-size, padding, or margin should be declared using
    rem. based on html element --> 1.5rem x 16px (default html) = 24px. Using px as a unit sets things in stone which isn't good.

    styled buttons and was first exposed to using the -- nomenclature. for instance btn--orange, btn--large. This is how you specify MODIFIERS.

  Lecture 16 -
